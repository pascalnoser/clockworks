% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CircadianData.R
\name{plot_feature}
\alias{plot_feature}
\alias{plot_feature,CircadianData-method}
\title{Plot Feature Values Over Time}
\usage{
plot_feature(x, feature, group = NULL, add_wave = TRUE, ...)

\S4method{plot_feature}{CircadianData}(x, feature, group = NULL, add_wave = TRUE, ...)
}
\arguments{
\item{x}{A \code{CircadianData} object.}

\item{feature}{A single character string specifying the name or a single
numeric value specifying the row number of the feature (from
\code{rownames(dataset(x))}) to plot.}

\item{group}{An optional single character string specifying a group to filter
by. This is only applicable if a 'group' column exists in the metadata. If
\code{NULL} (the default) and a 'group' column exists, data from all groups are
plotted with different colors.}

\item{add_wave}{An optional logical value (TRUE/FALSE) specifying whether a
sine wave fitted by harmonic regression should be plotted on top of the
data. Only applies when \code{wave_params} has been filled by running
\code{estimate_wave_params()} or \code{clockworks()} on \code{x}.}

\item{...}{Additional arguments passed to the base \code{plot()} function.}
}
\description{
Creates a scatterplot of the values for a specific feature against time. If a
'group' column exists in the metadata, points are colored by group, and the
plot can be optionally filtered to a single group.
}
\examples{
# --- With a 'group' column in metadata ---
set.seed(123)
counts <- matrix(rpois(80, lambda = 50), nrow = 10, ncol = 8,
                 dimnames = list(paste0("Feature", 1:10), paste0("Sample", 1:8)))
meta <- data.frame(
  row.names = paste0("Sample", 1:8),
  time = rep(c(0, 6, 12, 18), each = 2),
  group = factor(rep(c("Control", "Treated"), 4))
)
cd_obj_grouped <- CircadianData(
  dataset = counts,
  metadata = meta,
  colname_sample = "rownames",
  colname_time = "time",
  colname_group = "group"
)
cd_obj_grouped <- add_experiment_info(cd_obj_grouped)

# Plot a feature for all groups (colored by group)
plot_feature(cd_obj_grouped, feature = "Feature3")

# Plot a feature for only the "Treated" group
plot_feature(cd_obj_grouped, feature = "Feature3", group = "Treated")

# --- Without a 'group' column in metadata ---
cd_obj_no_group <- CircadianData(
  dataset = counts,
  metadata = meta,
  colname_sample = "rownames",
  colname_time = "time"
)
cd_obj_no_group <- add_experiment_info(cd_obj_no_group)

# Plot a feature (all points will have the same color)
plot_feature(cd_obj_no_group,
             feature = "Feature5",
             main = "Feature 5 (No Groups Defined)")

}
